class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <-Sys.time
t1 <-Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- c("October 17,1986 08:24")
t3 <- "October 17,1986 08:24"
t3 <- c("October 17, 1986 08:24")
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
sys.time()>t1
Sys.time()>t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
data(cars)
?cas
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
?par
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data.frame(mtcars)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
tapply(mtcars$mpg, mtcars$cyl, mean)
source('~/makeVector.R')
makeVector <- function(x = numeric()) {
m <- NULL
print(environment())
evn <- environment()
print(parent.env(evn))
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
getevn<- function() environment()
list(set = set, get = get,
setmean = setmean,
getmean = getmean,
getevn = getevn)
}
> x <- 1:10000
> vec<-makeVector(x)
<environment: 0x2924c28>
<environment: R_GlobalEnv>
x <- 1:10000
> vec<-makeVector(x)
<environment: 0x2924c28>
<environment: R_GlobalEnv>
x <- 1:10000
vec<-makeVector(x)
vec$getmean()
mx <- mean(x)
vec$setmean(mx)
vec$getmean()
vec$getenv()
vec$getevn()
ls(vec$getevn())
parent.env(vec$getevn())
ls(parent.env(vec$getevn()))
parent.env(vec$getevn())$m
?cashemean
?cachemean
?cachemean
?cachemean
myVector(myVector)
ls(environment(myVector$get))
ls(environment(a$get
ls(environment(a$get)
ls(environment(a$get)
c
ls(environment(myVector$get))
myVector <- makeVector(1:10)
cachemean(myVector)
cachemean(myVector)
source('~/makeVector.R')
source('~/cachemean.R')
myVector <- makeVector(1:10)
cachemean(myVector)
cachemean(myVector)
ls(environment(myVector$get))
myVector$getmean()
environment(myVector$get)$m
?solve
source('~/makeCacheMatrix.R')
source('~/cacheSolve.R')
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
x<-matrix(1:4,2,2)
matx<-makeCacheMatrix(x)
cacheSolve(matx)
cacheSolve(matx)
x<-matrix(c(4,1,3,1),2,2)
cacheSolve(matx)
solve(x)
x
x<-matrix(c(4,1,3,2),2,2)
x
solve(x)
cacheSolve(matx)
cacheSolve(matx)
Solve(matx)
solve(matx)
makeCacheMatrix
makeCacheMatrix(matx)
cacheSolve(matx)
x<-matrix(c(4,1,3,1),2,2)
makeCacheMatrix(matx)
solve(x)
B = matrix(4:7,nrow=2,ncol=2)
fList <- makeCacheMatrix(B)
cacheSolve(fList,B) #1st call, this will compute the inverse
cacheSolve(fList,B) #2nd call, this will get the result from the cache
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(fList,B) #2nd call, this will get the result from the cache
cacheSolve(fList) #3rd call, this will get the result from the cache
B = matrix(1:4,nrow=2,ncol=2) #matrix reassigned value
cacheSolve(fList,B) #4th call, this will compute the new inverse
cacheSolve(fList,B) #5th call, this will get the result from the new cache
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
install.packages('quantmod')
library(quantmod)
stockData <- new.env()
getSymbols(GPRO, env = stockData, src = "yahoo", from = 1/01/14, to = 03/31/2014)
getSymbols("GPRO", env = stockData, src = "yahoo", from = 1/01/14, to = 03/31/2014)
getSymbols("GPRO")
chartSeries(GPRO)
?chartSeries
chartSeries(GPRO,,,,,,01/01/14)
library(quantmod)
g <- getSymbols()
g(GPRO)
getSymbols(GPRO)
getSymbols("GPRO")
GPRO
?dailyreturn
?daily.return
daily.return(GPRO, period=)
daily.return(GPRO, period=monthly
daily.return(GPRO, period=monthly)
dailyReturn(GPRO, period='weekly')
dailyREturn(GPRO)
dailyReturn(GPRO)
getSymbols("BABA")
dailyReturn(BABA)
g <- getSymbols("BABA")
sum(g$daily.returns)
dailyReturns(BABA,period = monthly)
?dailyReturns
?dailyReturn
dailyReturns(BABA,monthly)
dailyReturn(BABA,monthly)
dailyReturn(BABA,period = monthly)
sum(dailyReturn(BABA))
average(dailyReturn(BABA))
?AVG
?avg
mean(dailyReturn(BABA))
mean(dailyReturn(GPRO))
dailyReturn(GPRO)
weeklyReturn(BABA)
weeklyReturn(BABA[01-01-2014:01-31-2014])
periodReturn(BABA, period = 'monthly')
ggplot(periodReturn(BABA, period = 'monthly'))
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
sum(periodReturn(BABA, period = 150))
sum(periodReturn(BABA, period = daily))
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
morning(BABA, 'monthly')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
source('~/Robin Drive/Stocks.R')
swirl()
library(swirl)
swirl()
swirl()
install_from_swirl(Getting_and_Cleaning_Data)
install_from_swirl("Getting_and_Cleaning_Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = False)
mydf <- read.csv(path2csv, stringsAsFactors = False, sep = "'", header = TRUE)
mydf <- read.csv(path2csv, stringsAsFactors = False, sep = ",", header = TRUE)
?read.csv
mydf <- read.csv(path2csv, header = TRUE, sep = ",",...,stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE, sep = ",", header = TRUE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, r_country:r_arch)
select(cran, country:r_arch)
mydf
cran
select(cran, -time)
select(cran, -x:-size)
select(cran, -x:size)
select(cran, -X:size)
select(cran, -(x:size))
X
x
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package =="swirl")
filter(cran, r_version =="3.1.1", country == "US")
?Comparison
filter(cran, r_version <="3.0.2", country == "IN")
filter(cran, r_version <="3.0.2", country == "US" | country == "IN")
filter(cran,country == "US" | country == "IN")
?filter
filter(cran, size > 100500, r_os == linux-gnu)
filter(cran, size > 100500 & r_os == linux-gnu)
filter((cran, size > 100500) & (r_os == linux-gnu))
filter((cran, size > 100500),(r_os == linux-gnu))
?filter
filter((cran, size > 100500) & (r_os == "linux-gnu"))
filter((cran, size > 100500),(r_os == "linux-gnu"))
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA10)
is.na(c(3,5,NA, 19))
is.na(c(3,5,NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, r_version == !is.na())
filter(cran, !is.na(r_version))
cran2 <- select(cran, ip_id:store)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(ip_id, package, size)
cran3 <- select(cran,ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
?sapply
mutate(cran3, correct_size = size-1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes =
| mean(size))
summarize(cran, avg_bytes=mean(size))
bye()
exit()
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(.cran,..., add = FALSE)
by_package <- group_by(.cran,...)
by_package <- group_by(.cran,add = FALSE)
by_package <- group_by(cran, ...,add = FALSE)
by_package <- group_by(cran,add = FALSE)
by_package <- group_by(cran,PACKAGE)
by_package <- group_by(cran,package)
by_package
summarize(cran, mean(size))
summarize(cran, by_package, mean(size))
summarize(cran, "by_package" & "mean(size"))
?summarize
summarize("by_package", "mean(size)")
summarize(by_package, mean(size))
bye()
library(swirl)
swirl()
setwd("~/Coursera/ExploratoryDataAnalysis/ExData_Plotting1")
HHNRG <- read.table("exdata_data_household_power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
library(data.table)
HHNRG <- data.table(HHNRG)
library(dplyr)
HHNRG <- filter(HHNRG, Date == "1/2/2007"| Date == "2/2/2007")
HHNRG <- select(HHNRG, Global_active_power, Date, Time)
library(lubridate)
HHNRG <- mutate(HHNRG, DNT = paste(Date, Time, sep = "_"))
y <- as.numeric(as.character(HHNRG$Global_active_power))
x <- dmy_hms(HHNRG$DNT)
png('plot2.png')
plot(x,y, type = "l", xlab = " ", ylab = "Global Active Power (kilowatts)")
dev.off()
HHNRG <- read.table("exdata_data_household_power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
library(data.table)
HHNRG <- data.table(HHNRG)
library(dplyr)
HHNRG <- filter(HHNRG, Date == "1/2/2007"| Date == "2/2/2007")
HHNRG <- select(HHNRG, Global_active_power, Date, Time)
library(lubridate)
HHNRG <- mutate(HHNRG, DNT = paste(Date, Time, sep = "_"))
y <- as.numeric(as.character(HHNRG$Global_active_power))
x <- dmy_hms(HHNRG$DNT)
png('plot2.png')
plot(x,y, type = "l", xlab = " ", ylab = "Global Active Power (kilowatts)")
dev.off()
HHNRG <- read.table("exdata_data_household_power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
library(data.table)
HHNRG <- data.table(HHNRG)
library(dplyr)
HHNRG <- filter(HHNRG, Date == "1/2/2007"| Date == "2/2/2007")
HHNRG <- select(HHNRG, Global_active_power, Date, Time)
library(lubridate)
HHNRG <- mutate(HHNRG, DNT = paste(Date, Time, sep = "_"))
y <- as.numeric(as.character(HHNRG$Global_active_power))
x <- dmy_hms(HHNRG$DNT)
png('plot2.png')
plot(x,y, type = "l", xlab = " ", ylab = "Global Active Power (kilowatts)")
dev.off()
HHNRG <- read.table("exdata_data_household_power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
library(data.table)
HHNRG <- data.table(HHNRG)
library(dplyr)
HHNRG <- filter(HHNRG, Date == "1/2/2007"| Date == "2/2/2007")
HHNRG <- select(HHNRG, Global_active_power, Date, Time)
library(lubridate)
HHNRG <- mutate(HHNRG, DNT = paste(Date, Time, sep = "_"))
y <- as.numeric(as.character(HHNRG$Global_active_power))
x <- dmy_hms(HHNRG$DNT)
png('plot2.png')
plot(x,y, type = "l", xlab = " ", ylab = "Global Active Power (kilowatts)")
dev.off()
HHNRG <- read.table("exdata_data_household_power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
library(data.table)
HHNRG <- data.table(HHNRG)
library(dplyr)
HHNRG <- filter(HHNRG, Date == "1/2/2007"| Date == "2/2/2007")
HHNRG <- select(HHNRG, Sub_metering_1, Sub_metering_2, Sub_metering_3, Date, Time)
library(lubridate)
HHNRG <- mutate(HHNRG, DNT = paste(Date, Time, sep = "_"))
y1 <- as.numeric(as.character(HHNRG$Sub_metering_1))
y2 <- as.numeric(as.character(HHNRG$Sub_metering_2))
y3 <- as.numeric(as.character(HHNRG$Sub_metering_3))
x <- dmy_hms(HHNRG$DNT)
png('plot3.png')
plot(x,y1, type = "l", xlab = " ", ylab = "Energy sub metering")
lines(x,y2, col = c("red"))
lines(x,y3, col = c("blue"))
legend("topright",
legend = c("Sub_metering_1",
"Sub_metering_2",
"Sub_metering_3"),
col = c("black", "red", "blue"),
lwd = .75,
cex = .75
)
dev.off()
##PLOT 2 - GLOBAL ACTIVE POWER
ONE <- read.table("exdata_data_household_power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
library(data.table)
TWO <- data.table(ONE)
library(dplyr)
TWO <- filter(TWO, Date == "1/2/2007"| Date == "2/2/2007")
TWO <- select(TWO, Global_active_power, Date, Time)
library(lubridate)
TWO <- mutate(TWO, DNT = paste(Date, Time, sep = "_"))
y <- as.numeric(as.character(TWO$Global_active_power))
x <- dmy_hms(TWO$DNT)
##INDEX
##PLOT3-SUBMETERING
THREE <- data.table(ONE)
THREE <- filter(THREE, Date == "1/2/2007"| Date == "2/2/2007")
THREE <- select(THREE, Sub_metering_1, Sub_metering_2, Sub_metering_3, Date, Time)
THREE <- mutate(THREE, DNT = paste(Date, Time, sep = "_"))
y1 <- as.numeric(as.character(THREE$Sub_metering_1))
y2 <- as.numeric(as.character(THREE$Sub_metering_2))
y3 <- as.numeric(as.character(THREE$Sub_metering_3))
##PLOT4-VOLTAGE
FOUR <- data.table(ONE)
FOUR <- filter(FOUR, Date == "1/2/2007"| Date == "2/2/2007")
FOUR <- select(FOUR, Voltage, Date, Time)
FOUR <- mutate(FOUR, DNT = paste(Date, Time, sep = "_"))
y4 <- as.numeric(as.character(FOUR$Voltage))
##PLOT5-GLOBAL REACTIVE POWER
FIVE <- data.table(ONE)
FIVE <- filter(FIVE, Date == "1/2/2007"| Date == "2/2/2007")
FIVE <- select(FIVE, Global_reactive_power, Date, Time)
FIVE <- mutate(FIVE, DNT = paste(Date, Time, sep = "_"))
y5 <- as.numeric(as.character(FIVE$Global_reactive_power))
par(mfcol = c(2,2))
png('plot4.png')
plot(x,y, type = "l", xlab = " ", ylab = "Global Active Power (kilowatts)", pch = 20)
plot(x,y1, type = "l", xlab = " ", ylab = "Energy sub metering",pch = 20)
lines(x,y2, col = c("red"))
lines(x,y3, col = c("blue"))
legend("topright",
legend = c("Sub_metering_1",
"Sub_metering_2",
"Sub_metering_3"),
col = c("black", "red", "blue"),
lwd = .75,
cex = .75
)
plot(x,y4, type = "l", xlab = "datetime", ylab = "Voltage", ylim = c(234,246), pch = 20)
plot(x,y5, type = "l", xlab = "datetime", ylab = "Global_reactive_power", ylim = c(0.0,0.5), pch = 20)
dev.off()
##PLOT 2 - GLOBAL ACTIVE POWER
ONE <- read.table("exdata_data_household_power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
library(data.table)
TWO <- data.table(ONE)
library(dplyr)
TWO <- filter(TWO, Date == "1/2/2007"| Date == "2/2/2007")
TWO <- select(TWO, Global_active_power, Date, Time)
library(lubridate)
TWO <- mutate(TWO, DNT = paste(Date, Time, sep = "_"))
y <- as.numeric(as.character(TWO$Global_active_power))
x <- dmy_hms(TWO$DNT)
##INDEX
##PLOT3-SUBMETERING
THREE <- data.table(ONE)
THREE <- filter(THREE, Date == "1/2/2007"| Date == "2/2/2007")
THREE <- select(THREE, Sub_metering_1, Sub_metering_2, Sub_metering_3, Date, Time)
THREE <- mutate(THREE, DNT = paste(Date, Time, sep = "_"))
y1 <- as.numeric(as.character(THREE$Sub_metering_1))
y2 <- as.numeric(as.character(THREE$Sub_metering_2))
y3 <- as.numeric(as.character(THREE$Sub_metering_3))
##PLOT4-VOLTAGE
FOUR <- data.table(ONE)
FOUR <- filter(FOUR, Date == "1/2/2007"| Date == "2/2/2007")
FOUR <- select(FOUR, Voltage, Date, Time)
FOUR <- mutate(FOUR, DNT = paste(Date, Time, sep = "_"))
y4 <- as.numeric(as.character(FOUR$Voltage))
##PLOT5-GLOBAL REACTIVE POWER
FIVE <- data.table(ONE)
FIVE <- filter(FIVE, Date == "1/2/2007"| Date == "2/2/2007")
FIVE <- select(FIVE, Global_reactive_power, Date, Time)
FIVE <- mutate(FIVE, DNT = paste(Date, Time, sep = "_"))
y5 <- as.numeric(as.character(FIVE$Global_reactive_power))
png('plot4.png')
par(mfcol = c(2,2))
plot(x,y, type = "l", xlab = " ", ylab = "Global Active Power (kilowatts)", pch = 20)
plot(x,y1, type = "l", xlab = " ", ylab = "Energy sub metering",pch = 20)
lines(x,y2, col = c("red"))
lines(x,y3, col = c("blue"))
legend("topright",
legend = c("Sub_metering_1",
"Sub_metering_2",
"Sub_metering_3"),
col = c("black", "red", "blue"),
lwd = .75,
cex = .75
)
plot(x,y4, type = "l", xlab = "datetime", ylab = "Voltage", ylim = c(234,246), pch = 20)
plot(x,y5, type = "l", xlab = "datetime", ylab = "Global_reactive_power", ylim = c(0.0,0.5), pch = 20)
dev.off()
